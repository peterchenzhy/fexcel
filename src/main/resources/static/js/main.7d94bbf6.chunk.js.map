{"version":3,"sources":["utils/types.js","services/axiosConfig.js","services/axios.js","stores/actions/resumeActions.js","services/api.js","stores/reducers/resumeReducer.js","stores/reducers/index.js","stores/index.js","App.js","index.js"],"names":["async","type","concat","axiosUploadConfig","headers","Content-Type","method","withCredentials","validateStatus","status","transformResponse","respData","axiosBaseConfig","baseURL","responseType","transformRequest","data","JSON","stringify","window","eventStore","EE","services_axios","url","reqData","axiosConfig","instance","axios","create","interceptors","response","use","res","parse","error","toUpperCase","get","params","console","log","post","__webpack_require__","d","__webpack_exports__","types","prefix","_len","arguments","length","args","Array","_key","reduce","map","v","createTypes","tableDelete","TABLE_DELETE","payload","fetch","config","editStore","param","EDIT_STORE","bridge","getFileList","GET_FILE_LIST","fileList","fileExport","FILE_EXPORT","export","uploadFile","UPLOAD_FILE","upload","getTableList","GET_TABLE_LIST","tableList","getColumnList","GET_COLUMN_LIST","columnList","resetState","RESET_STATE","editData","EDIT_DATA","batchUpdate","BATCH_UPDATE","tableName","list","getTableCollumPage","GET_COLUMN_LIST_PAGE","tableCollumManager","TABLE_COLUMN_MANAGER","initialState","operateSuccessFlag","operateFailFlag","operateInfo","loading","pageInfo","pageSize","pageNum","total","refreshFileFlag","columnListPage","reducers","resumeReducer","state","undefined","action","Object","objectSpread","editObj","tempList","toConsumableArray","item","id","key","value","GET_FILE_LIST_SUCCESS","message","success","TABLE_DELETE_SUCCESS","BATCH_UPDATE_SUCCESS","FILE_EXPORT_SUCCESS","TABLE_COLUMN_MANAGER_SUCCESS","GET_COLUMN_LIST_SUCCESS","GET_COLUMN_LIST_PAGE_SUCCESS","_action$payload$data","forEach","temp","can_search","push","can_view","can_edit","initialChecked","UPLOAD_FILE_SUCCESS","GET_TABLE_LIST_PENDING","GET_TABLE_LIST_SUCCESS","_action$payload$data2","store","devtools","devToolsExtension","noop","rootReducer","combineReducers","routing","routerReducer","middlewares","routerMiddleware","hashHistory","thunkMiddleware","promiseMiddleware","promiseTypeSuffixes","enhancers","applyMiddleware","apply","createStore","compose","Index","Promise","all","e","then","bind","Edit","getComponent","pkg","location","cb","module","default","routes","path","history","syncHistoryWithStore","ReactDOM","render","react_default","a","createElement","lib","props","es","document","getElementById"],"mappings":"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","file":"static/js/main.7d94bbf6.chunk.js","sourcesContent":["export const createTypes = (prefix, ...args) => args.reduce((types, type) => {\n  [].concat(type).map((v) => types[v] = prefix + v);\n  return types;\n}, {});\n\nexport const async = (type) => [type, `${type}_PENDING`, `${type}_SUCCESS`, `${type}_ERROR`];","export const axiosUploadConfig = {\n  headers: { 'Content-Type': 'multipart/form-data' },\n  method: 'post',\n  withCredentials: true, // default\n  // http请求返回状态码检查\n  validateStatus: status => status >= 200 && status < 300, // default\n  // 返回数据预处理\n  transformResponse: [respData => respData,\n  ],\n};\n\nexport const axiosDownloadConfig = {\n  baseURL: '/',\n  headers: { 'Content-Type': 'application/json' },\n  method: 'post',\n  // 跨域请求，是否带上认证信息\n  withCredentials: true, // default\n  // http返回的数据类型\n  // 默认是json，可选'arraybuffer', 'blob', 'document', 'json', 'text', 'stream'\n  responseType: 'blob', // default\n  // http请求返回状态码检查\n  validateStatus: status => status >= 200 && status < 300, // default\n  // 请求数据预处理\n  transformRequest: [(data, headers) => {\n    // 请求对象转换成jon字符串\n    if (typeof data === 'object') {\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n  // 返回数据预处理\n  transformResponse: [respData => respData,\n  ],\n};\n\n// axios配置\nexport const axiosBaseConfig = {\n  baseURL: '/',\n  headers: { 'Content-Type': 'application/json' },\n  method: 'post',\n  // 跨域请求，是否带上认证信息\n  withCredentials: false, // default\n  // http返回的数据类型\n  // 默认是json，可选'arraybuffer', 'blob', 'document', 'json', 'text', 'stream'\n  responseType: 'json', // default\n  // http请求返回状态码检查\n  validateStatus: status => status >= 200 && status < 300, // default\n  // 请求数据预处理\n  transformRequest: [(data, headers) => {\n    // 请求对象转换成jon字符串\n    if (typeof data === 'object') {\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n};\n","import axios from 'axios';\nimport EE from 'eventemitter3';\nimport { axiosBaseConfig } from './axiosConfig';\n\nwindow.eventStore = new EE();\n\nexport default (url, reqData, axiosConfig, method) => {\n  const instance = axios.create(axiosConfig || axiosBaseConfig);\n  instance.interceptors.response.use(\n    (res) => {\n      if (typeof res.data !== 'object') {\n        return JSON.parse(res.data);\n      }\n      return res.data || res;\n    },\n    (error) => {\n      return JSON.parse(error.response.data)\n    }\n  );\n  if (method && method.toUpperCase() === 'GET') {\n    return instance.get(url, { params: reqData });\n  } else {\n    console.log(reqData);\n    return instance.post(url, reqData);\n  }\n}\n\n","import { createTypes, async } from '../../utils/types';\nimport fetch from \"../../services/axios\";\nimport url from \"../../services/api\";\nimport { axiosUploadConfig } from \"../../services/axiosConfig\";\n\nexport const types = createTypes('resume/',\n  async('GET_FILE_LIST'),\n  async('GET_TABLE_LIST'),\n  async('GET_COLUMN_LIST'),\n  async('UPLOAD_FILE'),\n  async('FILE_EXPORT'),\n  async('SUBMIT_RESUME'),\n  async('BATCH_UPDATE'),\n  async('TABLE_DELETE'),\n  async('GET_COLUMN_LIST_PAGE'),\n  async('TABLE_COLUMN_MANAGER'),\n  'EDIT_STORE',\n  'RESET_STATE',\n  'EDIT_DATA'\n);\n\n// 获取文件list\nconst getFileList = (params) => ({\n  type: types.GET_FILE_LIST,\n  payload: fetch(url.config.fileList, params, {}, 'get')\n});\n\n// 获取table list\nconst getTableList = (params) => ({\n  type: types.GET_TABLE_LIST,\n  payload: fetch(url.config.tableList, params)\n});\n\n// 获取table list\nconst getColumnList = (params) => ({\n  type: types.GET_COLUMN_LIST,\n  payload: fetch(url.config.columnList, params, {}, 'get')\n});\n\n// 获取table list\nconst getTableCollumPage = (params) => ({\n  type: types.GET_COLUMN_LIST_PAGE,\n  payload: fetch(url.config.getTableCollumPage, params)\n});\n\n// 附件上传\nconst uploadFile = (params) => {\n  return {\n    type: types.UPLOAD_FILE,\n    payload: fetch(url.config.upload, params, axiosUploadConfig)\n  }\n};\n// 附件上传\nconst fileExport = (params) => {\n  return {\n    type: types.FILE_EXPORT,\n    payload: fetch(url.config.export, params, {}, 'get')\n  }\n};\n// 批量更新\nconst batchUpdate = (params) => {\n  return {\n    type: types.BATCH_UPDATE,\n    payload: fetch(`${url.config.batchUpdate}?tableName=${params.tableName}`, params.list)\n  }\n};\n\n// 删除文件\nconst tableDelete = (params) => {\n  return {\n    type: types.TABLE_DELETE,\n    payload: fetch(url.config.tableDelete, params, {}, 'get')\n  }\n};\n\n// 删除文件\nconst tableCollumManager = (params) => {\n  return {\n    type: types.TABLE_COLUMN_MANAGER,\n    payload: fetch(url.config.tableCollumManager, params)\n  }\n};\n\nconst editStore = (param) => ({\n  type: types.EDIT_STORE,\n  bridge: param\n});\nconst editData = (param) => ({\n  type: types.EDIT_DATA,\n  bridge: param\n});\n\n\n// reset state\nconst resetState = () => ({\n  type: types.RESET_STATE,\n});\n\nexport default {\n  tableDelete,\n  editStore,\n  getFileList,\n  fileExport,\n  uploadFile,\n  getTableList,\n  getColumnList,\n  resetState,\n  editData,\n  batchUpdate,\n  getTableCollumPage,\n  tableCollumManager,\n}\n","let url = {};\nurl.prefix = 'http://localhost:8112/';\nurl.config = {};\n// table list\nurl.config.tableList = `${url.prefix}queryData`;\n// column\nurl.config.columnList = `${url.prefix}getTableCollum`;\n// file map\nurl.config.fileList = `${url.prefix}getFileList`;\n// upload\nurl.config.upload = `${url.prefix}file/upload`;\n// export\nurl.config.export = `${url.prefix}file/export`;\n// batch\nurl.config.batchUpdate = `${url.prefix}batchCommit`;\n// 更新表头列\nurl.config.tableCollumManager = `${url.prefix}tableCollumManager`;\n// delete file\nurl.config.tableDelete = `${url.prefix}tableDelete`;\n// page columns\nurl.config.getTableCollumPage = `${url.prefix}getTableCollumPage`;\n\nexport default url;\n","import { types } from '../actions/resumeActions';\n\nlet initialState = {\n  operateSuccessFlag: false,\n  operateFailFlag: false,\n  operateInfo: '',\n  loading: false,\n  pageInfo: {\n    pageSize: 20,\n    pageNum: 1,\n    total: 0\n  },\n  tableList: [],\n  fileList: [],\n  refreshFileFlag: false,\n  columnListPage: []\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.EDIT_STORE:\n      return {\n        ...state,\n        ...action.bridge\n      };\n    case types.EDIT_DATA: {\n      const editObj = action.bridge;\n      let tempList = [...state.tableList];\n      tempList.map(item => {\n        if (editObj.id === item.id) {\n          item[editObj.key] = editObj.value;\n        }\n      });\n      return {\n        ...state,\n        tableList: tempList\n      };\n    }\n    // GET_FILE_LIST\n    case types.GET_FILE_LIST_SUCCESS: {\n      const { message } = action.payload;\n      if (action.payload && action.payload.success) {\n        return {\n          ...state,\n          fileList: action.payload.data || [],\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: message || '接口获取失败',\n          fileList: [],\n        };\n      }\n    }\n    // TABLE_DELETE\n    case types.TABLE_DELETE_SUCCESS: {\n      const { message } = action.payload;\n      if (action.payload && action.payload.success) {\n        return {\n          ...state,\n          operateSuccessFlag: true,\n          operateFailFlag: false,\n          operateInfo: message || '删除成功',\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: message || '删除失败',\n        };\n      }\n    }\n    // BATCH_UPDATE\n    case types.BATCH_UPDATE_SUCCESS: {\n      const { message } = action.payload;\n      if (action.payload && action.payload.success) {\n        return {\n          ...state,\n          operateSuccessFlag: true,\n          operateFailFlag: false,\n          operateInfo: message || '更新成功',\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: message || '更新失败',\n        };\n      }\n    }\n    // FILE_EXPORT\n    case types.FILE_EXPORT_SUCCESS: {\n      if (action.payload && action.payload.success) {\n        return {\n          ...state,\n          operateSuccessFlag: true,\n          operateFailFlag: false,\n          operateInfo: '成功',\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: action.payload.message || '操作失败',\n        };\n      }\n    }\n    // TABLE_COLUMN_MANAGER\n    case types.TABLE_COLUMN_MANAGER_SUCCESS: {\n      if (action.payload && action.payload.success) {\n        return {\n          ...state,\n          operateSuccessFlag: true,\n          operateFailFlag: false,\n          operateInfo: '成功',\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: action.payload.message || '操作失败',\n        };\n      }\n    }\n    // GET_column_LIST\n    case types.GET_COLUMN_LIST_SUCCESS: {\n      const { message } = action.payload;\n      if (action.payload.success) {\n        return {\n          ...state,\n          columnList: action.payload.data || [],\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: message || '接口获取失败',\n          columnList: [],\n        };\n      }\n    }\n    // GET_column_LIST_PAGE\n    case types.GET_COLUMN_LIST_PAGE_SUCCESS: {\n      if (action.payload.success) {\n        const { list, pageSize, pageNum, total } = action.payload.data;\n        list && list.length > 0 && list.forEach(item => {\n          let temp = [];\n          item.can_search === 1 && temp.push('can_search');\n          item.can_view === 1 && temp.push('can_view');\n          item.can_edit === 1 && temp.push('can_edit');\n          item.initialChecked = temp;\n        });\n        return {\n          ...state,\n          pageInfo: {\n            pageSize,\n            pageNum,\n            total\n          },\n          columnListPage: list,\n          loading: false\n        }\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: action.payload.message || '接口获取失败',\n          columnListPage: [],\n          loading: false\n        };\n      }\n    }\n    case types.UPLOAD_FILE_SUCCESS:\n      if (action.payload.success) {\n        return {\n          ...state,\n          operateSuccessFlag: true,\n          operateFailFlag: false,\n          operateInfo: '成功',\n          refreshFileFlag: true,\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: action.payload.message || '操作失败',\n        };\n      }\n    case types.GET_TABLE_LIST_PENDING: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n    case types.GET_TABLE_LIST_SUCCESS:\n      if (action.payload.success) {\n        const { list, pageSize, pageNum, total } = action.payload.data;\n        return {\n          ...state,\n          pageInfo: {\n            pageSize,\n            pageNum,\n            total\n          },\n          tableList: list,\n          loading: false\n        }\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: action.payload.message || '接口获取失败',\n          tableList: [],\n          loading: false\n        };\n      }\n    case types.RESET_STATE:\n      return {\n        ...state,\n        operateSuccessFlag: false,\n        operateFailFlag: false,\n        operateInfo: '',\n        refreshFileFlag: false,\n      };\n    default:\n      return state;\n  }\n}\n","import resumeReducer from './resumeReducer';\n\nexport default {\n  resumeReducer\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport createLogger from 'redux-logger';\nimport reducers from './reducers';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { hashHistory } from 'react-router';\nimport { routerMiddleware, routerReducer } from 'react-router-redux';\n\nexport default function store() {\n  const devtools = window.devToolsExtension || (() => (noop) => noop);\n\n  const rootReducer = combineReducers({\n    ...reducers,\n    routing: routerReducer\n  });\n  const middlewares = [routerMiddleware(hashHistory), thunkMiddleware, promiseMiddleware({ promiseTypeSuffixes: ['PENDING', 'SUCCESS', 'ERROR'] })];\n\n  if (process.env.NODE_ENV !== 'production') {\n    middlewares.push(createLogger());\n  }\n\n  const enhancers = [applyMiddleware(...middlewares), devtools()];\n\n  const initState = {};\n  const store = createStore(rootReducer, initState, compose(...enhancers));\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers/index');\n      const nextRootReducer = combineReducers({\n        ...nextReducer,\n        routing: routerReducer\n      });\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n\n}\n\n","import React from 'react';\nimport { Router } from 'react-router';\n\nconst Index = import('./pages/index/Index');\nconst Edit = import('./pages/Edit/index');\nconst getComponent = (pkg) => (location, cb) => {\n  pkg.then((module) => {\n    cb(null, module.default);\n  });\n};\nconst routes = [\n  {\n    path: '/',\n    getComponent: getComponent(Index)\n  },\n  {\n    path: '/employee',\n    getComponent: getComponent(Index)\n  },\n  {\n    path: '/admin',\n    getComponent: getComponent(Index)\n  },\n  {\n    path: '/edit',\n    getComponent: getComponent(Edit)\n  },\n];\n\nexport default (props) => <Router history={props.history}\n                                  routes={routes} />;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { hashHistory } from 'react-router';\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport store from './stores';\nimport 'babel-polyfill';\nimport Routes from './App';\nimport './styles/reset.less';\nimport './styles/index.less';\n\nconst history = syncHistoryWithStore(hashHistory, store());\nif (module.hot) {\n  module.hot.accept()\n}\n\nReactDOM.render(\n  <Provider store={store()}>\n    <Routes history={history} />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}