{"version":3,"sources":["pages/Edit/index.jsx"],"names":["setState","selectedRowKeys","clearData","Content","props","info","antd_es_modal__WEBPACK_IMPORTED_MODULE_18__","error","success","generalLayout","md","lg","xl","Edit","_PureComponent","_this","Object","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_12__","this","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_14__","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_15__","call","getFileList","actions","loadPage","pageNo","arguments","length","undefined","pageSize","form","validateFields","err","values","postData","tableName","fileId","getTableCollumPage","columnsObj","title","handlePageChange","dataIndex","handleShowSizeChange","render","current","record","handleSearch","e","preventDefault","batchUpdate","state","getFieldDecorator","getFieldValue","initialValue","initialChecked","list","columnListPage","forEach","item","temp","concat","id","arr","includes","push","value","tableCollumManager","content","showSuccess","msg","okText","okType","onOk","showError","showInfo","changeSelectGroup","resetForm","operateSuccessFlag","nextProps","resetFields","operateInfo","total","showSizeChanger","showQuickJumper","onChange","onShowSizeChange","text","selectedRows","getCheckboxProps","disabled","react__WEBPACK_IMPORTED_MODULE_23___default","a","createElement","antd_es_checkbox__WEBPACK_IMPORTED_MODULE_11__","Group","style","width","antd_es_row__WEBPACK_IMPORTED_MODULE_7__","antd_es_col__WEBPACK_IMPORTED_MODULE_9__","span","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_16__","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_13__","key","name","resetState","operateFailFlag","_this$props","fileList","_this$state","_this$props$pageInfo","pageInfo","pagination","pageNum","PureComponent","FinalEdit"],"mappings":"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","file":"static/js/5.813513d4.chunk.js","sourcesContent":["/* eslint-disable prefer-destructuring */\r/**\r * Created by charles on 2018/5/30.\r */\rimport React, { PureComponent } from 'react';\rimport './index.less';\rimport { connect } from 'react-redux';\rimport { Button, Col, Form, Row, Select, Layout, Table, Modal, Checkbox } from 'antd';\rimport { bindActionCreators } from \"redux\";\rimport actions from \"../../stores/actions/resumeActions\";\rimport { Link } from \"react-router\";\r\r\rconst FormItem = Form.Item;\rconst Content = Layout.Content;\rconst { info, error, success } = Modal;\rconst generalLayout = { md: 24, lg: 12, xl: 8 };\r\r\rclass Edit extends PureComponent {\r  constructor(props) {\r    super(props);\r    this.state = {\r      //文件上传loading\r      selectedRowKeys: [],\r      selectedRows: [],\r      columnsObj: [{\r        title: '列名(Column names)',\r        key: 'excel_collum_name',\r        dataIndex: 'excel_collum_name'\r      }, {\r        title: '多选操作(Multi Operation)',\r        key: 'isEdit',\r        render: (text, record) => {\r          return (\r            <Form.Item\r              label=\"\"\r            >\r              {this.props.form.getFieldDecorator(`checkbox-group_${record.id}`, {\r                initialValue: record.initialChecked || [],\r              })(\r                <Checkbox.Group style={{ width: \"100%\" }}>\r                  <Row>\r                    <Col span={8}><Checkbox value=\"can_edit\">是否可编辑(canEdit)</Checkbox></Col>\r                    <Col span={8}><Checkbox value=\"can_view\">是否可展示(isShow)</Checkbox></Col>\r                    <Col span={8}><Checkbox value=\"can_search\">是否可搜索(isSearch)</Checkbox></Col>\r                  </Row>\r                </Checkbox.Group>\r              )}\r            </Form.Item>\r          )\r        }\r      }]\r    };\r  }\r\r  componentDidMount() {\r    this.getFileList();\r    this.resetForm();\r  }\r\r  componentWillReceiveProps(nextProps) {\r    // 操作提示\r    if (this.props.operateSuccessFlag !== nextProps.operateSuccessFlag && nextProps.operateSuccessFlag === true) {\r      this.showSuccess(nextProps.operateInfo);\r      this.props.actions.resetState();\r    }\r    if (this.props.operateFailFlag !== nextProps.operateFailFlag && nextProps.operateFailFlag === true) {\r      this.showError(nextProps.operateInfo);\r      this.props.actions.resetState();\r    }\r  }\r\r  getFileList = () => {\r    this.props.actions.getFileList();\r  };\r\r  // 加载表格数据\r  loadPage = (pageNo = 1, pageSize = 20) => {\r    this.setState({\r      pageNo,\r    }, () => {\r      this.props.form.validateFields((err, values) => {\r        if (!err) {\r          let postData = {};\r          postData.pageNo = pageNo;\r          postData.pageSize = pageSize;\r          postData.tableName = values.fileId;\r\r          this.props.actions.getTableCollumPage(postData);\r          // 清空勾选\r          this.setState({\r            selectedRowKeys: [],\r            selectedRows: [],\r          });\r        }\r      });\r    });\r  };\r\r\r  // 翻页\r  handlePageChange = (pageNo, pageSize) => {\r    this.loadPage(pageNo, pageSize);\r  };\r\r  // 切换pageSize\r  handleShowSizeChange = (current, pageSize) => {\r    this.loadPage(1, pageSize);\r  };\r\r  handleSearch = (e) => {\r    e && e.preventDefault();\r    this.loadPage();\r  };\r\r  // 批量更新\r  batchUpdate = () => {\r    const { selectedRowKeys } = this.state;\r    const { getFieldValue } = this.props.form;\r    const { columnListPage } = this.props;\r    let list = [];\r    const tableName = getFieldValue('fileId');\r    if (tableName && tableName !== '') {\r      columnListPage.forEach(item => {\r        let temp = getFieldValue(`checkbox-group_${item.id}`);\r        let arr = [];\r        temp.includes('can_search') ? arr.push(1) : arr.push(0);\r        temp.includes('can_edit') ? arr.push(1) : arr.push(0);\r        temp.includes('can_view') ? arr.push(1) : arr.push(0);\r        list.push({\r          id: item.id,\r          value: arr\r        })\r      });\r      this.props.actions.tableCollumManager({ list, tableName: getFieldValue('fileId') });\r    } else {\r      Modal.error({\r        title: 'Tips',\r        content: 'Please select the file!',\r      });\r    }\r  };\r\r  showSuccess = (msg) => {\r    success({\r      title: 'Success',\r      content: msg,\r      okText: 'Confirm',\r      okType: 'info',\r      onOk: () => {\r        this.loadPage();\r      },\r    });\r  };\r\r  showError = (msg) => {\r    error({\r      title: 'Faild',\r      content: msg,\r      okText: 'Confirm',\r      okType: 'info',\r    });\r  };\r\r  showInfo = (msg) => {\r    info({\r      title: 'Tips',\r      content: msg,\r      okText: 'Confirm',\r      okType: 'info',\r    });\r  };\r\r  // 查询表头\r  changeSelectGroup = (value) => {\r    if (value && value !== '') {\r      this.loadPage();\r    }\r  };\r\r  resetForm = () => {\r    // 清空勾选\r    this.setState({\r      selectedRowKeys: [],\r      selectedRows: [],\r    });\r    this.props.actions.clearData();\r    this.props.form.resetFields();\r  };\r\r  render() {\r    const { getFieldDecorator } = this.props.form;\r    const { columnListPage, fileList } = this.props;\r    const { selectedRowKeys, columnsObj } = this.state;\r    const { pageNum, total, pageSize } = this.props.pageInfo;\r\r\r    // 分页数据\r    const pagination = {\r      current: pageNum,\r      total: total,\r      pageSize: pageSize,\r      showSizeChanger: true,\r      showQuickJumper: true,\r      onChange: this.handlePageChange,\r      onShowSizeChange: this.handleShowSizeChange,\r    };\r\r    const rowSelection = {\r      selectedRowKeys,\r      onChange: (selectedRowKeys, selectedRows) => {\r        this.setState({\r          selectedRowKeys,\r          selectedRows\r        });\r      },\r      getCheckboxProps: record => ({\r        disabled: false, // Column configuration not to be checked\r        name: record.name,\r      }),\r    };\r\r    return (\r      <div className=\"page-index\">\r        <Content>\r          <Form\r            className=\"ant-advanced-search-form\"\r            onSubmit={this.handleSearch}\r          >\r            <Row gutter={24}>\r              <Col span={10}\r                   style={{ height: 70 }}>\r                <FormItem labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}\r                          label=\"文件(File)\">\r                  {getFieldDecorator('fileId', {\r                    rules: [{\r                      required: true,\r                      whitespace: true,\r                      message: \"Please select the file!\",\r                    }]\r                  })(\r                    <Select\r                      showSearch\r                      optionFilterProp=\"children\"\r                      allowClear\r                      style={{ width: 400 }}\r                      placeholder=\"请选择\"\r                      onSelect={this.changeSelectGroup}>\r                      {\r                        fileList && fileList.length > 0 && fileList.map(item => {\r                          return (<Select.Option title={item.excelName} key={`tableFile_${item.id}`}\r                                                 value={item.tableName}>{item.excelName}</Select.Option>)\r                        })\r                      }\r                    </Select>,\r                  )}\r                </FormItem>\r              </Col>\r            </Row>\r            <Row gutter={24}>\r              <Col {...generalLayout} style={{ marginLeft: '100px', marginBottom: '15px' }}>\r\r                <Button type=\"default\" onClick={this.resetForm}>重置(Reset)</Button>\r              </Col>\r            </Row>\r          </Form>\r          <h3 style={{ margin: '0 0 5px', paddingTop: '25px', borderTop: '1px solid #ddd' }}></h3>\r          <Row gutter={24} style={{ marginBottom: '10px' }}>\r            <Col style={{ textAlign: 'left' }}\r                 span={12}>\r              <Button type=\"primary\" onClick={this.batchUpdate}>批量更新(Batch Update)</Button>\r              &nbsp;&nbsp;&nbsp;&nbsp;<Link to={'/admin'}>跳转信息编辑(Jump Edit Info)</Link>\r            </Col>\r            <Col style={{ textAlign: 'right' }}\r                 span={12}>\r              <div className=\"search-count\">\r                共 {pagination.total} 条\r              </div>\r            </Col>\r          </Row>\r          <Table scroll={{ x: 'max-content' }}\r                 rowKey=\"id\"\r                 className=\"table-list\"\r            // rowSelection={rowSelection}\r                 dataSource={columnListPage}\r                 columns={columnsObj}\r                 pagination={pagination} />\r        </Content>\r      </div>\r    );\r  }\r}\r\rconst FinalEdit = Form.create()(\r  Edit,\r);\r\rconst mapStateToProps = (state) => {\r  const {\r    resultList,\r    operateSuccessFlag,\r    operateFailFlag,\r    operateInfo,\r    tableList,\r    fileList,\r    refreshFileFlag,\r    columnListPage,\r    pageInfo,\r    loading,\r  } = state.resumeReducer;\r  return {\r    resultList,\r    operateSuccessFlag,\r    operateFailFlag,\r    operateInfo,\r    tableList,\r    fileList,\r    refreshFileFlag,\r    columnListPage,\r    pageInfo,\r    loading,\r  }\r};\r\rconst mapDispatchToProps = dispatch => {\r  return {\r    actions: bindActionCreators(actions, dispatch)\r  }\r};\r\rexport default connect(\r  mapStateToProps,\r  mapDispatchToProps\r)(FinalEdit);\r"],"sourceRoot":""}