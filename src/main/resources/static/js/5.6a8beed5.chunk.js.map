{"version":3,"sources":["pages/Edit/index.jsx"],"names":["selectedRowKeys","antd_es_form__WEBPACK_IMPORTED_MODULE_22__","Item","dataIndex","antd_es_layout__WEBPACK_IMPORTED_MODULE_20__","Content","record","antd_es_modal__WEBPACK_IMPORTED_MODULE_18__","info","error","success","id","initialValue","initialChecked","_PureComponent","Edit","props","_this","Object","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_12__","this","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_14__","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_15__","call","getFileList","actions","loadPage","pageNo","arguments","length","undefined","pageSize","setState","form","validateFields","err","values","postData","operateSuccessFlag","nextProps","showSuccess","operateInfo","current","operateFailFlag","e","preventDefault","showError","batchUpdate","resetState","getFieldValue","getFieldDecorator","columnListPage","fileList","item","arr","columnsObj","push","temp","includes","pageInfo","pageNum","total","list","value","tableCollumManager","tableName","title","content","msg","okText","okType","onOk","showInfo","changeSelectGroup","resetForm","resetFields","state","showSizeChanger","showQuickJumper","handlePageChange","onShowSizeChange","handleShowSizeChange","rowSelection","a","onChange","selectedRows","getCheckboxProps","disabled","react__WEBPACK_IMPORTED_MODULE_23___default","createElement","antd_es_checkbox__WEBPACK_IMPORTED_MODULE_11__","Group","style","width","antd_es_row__WEBPACK_IMPORTED_MODULE_7__","antd_es_col__WEBPACK_IMPORTED_MODULE_9__","span","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_16__","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_13__","key","name","_this2","_this$props","_this$state","_this$props$pageInfo"],"mappings":"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","file":"static/js/5.6a8beed5.chunk.js","sourcesContent":["/* eslint-disable prefer-destructuring */\r/**\r * Created by charles on 2018/5/30.\r */\rimport React, { PureComponent, Fragment } from 'react';\rimport './index.less';\rimport { connect } from 'react-redux';\rimport { Button, Col, Form, Row, Select, Layout, Table, Modal, Checkbox } from 'antd';\rimport { bindActionCreators } from \"redux\";\rimport actions from \"../../stores/actions/resumeActions\";\rimport url from \"../../services/api\";\r\r\rconst FormItem = Form.Item;\rconst Content = Layout.Content;\rconst { info, error, success } = Modal;\r\r\rclass Edit extends PureComponent {\r  constructor(props) {\r    super(props);\r    this.state = {\r      //文件上传loading\r      selectedRowKeys: [],\r      selectedRows: [],\r      columnsObj: [{\r        title: '列名',\r        key: 'excel_collum_name',\r        dataIndex: 'excel_collum_name'\r      }, {\r        title: '多选操作',\r        key: 'isEdit',\r        render: (text, record) => {\r          return (\r            <Form.Item\r              label=\"\"\r            >\r              {this.props.form.getFieldDecorator(`checkbox-group_${record.id}`, {\r                initialValue: record.initialChecked || [],\r              })(\r                <Checkbox.Group style={{ width: \"100%\" }}>\r                  <Row>\r                    <Col span={8}><Checkbox value=\"can_edit\">是否可编辑</Checkbox></Col>\r                    <Col span={8}><Checkbox value=\"can_view\">是否可展示</Checkbox></Col>\r                    <Col span={8}><Checkbox value=\"can_search\">是否可搜索</Checkbox></Col>\r                  </Row>\r                </Checkbox.Group>\r              )}\r            </Form.Item>\r          )\r        }\r      }]\r    };\r  }\r\r  componentDidMount() {\r    this.getFileList();\r  }\r\r  componentWillReceiveProps(nextProps) {\r    // 操作提示\r    if (this.props.operateSuccessFlag !== nextProps.operateSuccessFlag && nextProps.operateSuccessFlag === true) {\r      this.showSuccess(nextProps.operateInfo);\r      this.props.actions.resetState();\r    }\r    if (this.props.operateFailFlag !== nextProps.operateFailFlag && nextProps.operateFailFlag === true) {\r      this.showError(nextProps.operateInfo);\r      this.props.actions.resetState();\r    }\r  }\r\r  getFileList = () => {\r    this.props.actions.getFileList();\r  };\r\r  // 加载表格数据\r  loadPage = (pageNo = 1, pageSize = 20) => {\r    this.setState({\r      pageNo,\r    }, () => {\r      this.props.form.validateFields((err, values) => {\r        if (!err) {\r          let postData = {};\r          postData.pageNo = pageNo;\r          postData.pageSize = pageSize;\r          postData.tableName = values.fileId;\r\r          this.props.actions.getTableCollumPage(postData);\r          // 清空勾选\r          this.setState({\r            selectedRowKeys: [],\r            selectedRows: [],\r          });\r        }\r      });\r    });\r  };\r\r\r  // 翻页\r  handlePageChange = (pageNo, pageSize) => {\r    this.loadPage(pageNo, pageSize);\r  };\r\r  // 切换pageSize\r  handleShowSizeChange = (current, pageSize) => {\r    this.loadPage(1, pageSize);\r  };\r\r  handleSearch = (e) => {\r    e && e.preventDefault();\r    this.loadPage();\r  };\r\r  // 批量更新\r  batchUpdate = () => {\r    const { selectedRowKeys } = this.state;\r    const { getFieldValue } = this.props.form;\r    let list = [];\r    const tableName = getFieldValue('fileId');\r    if (tableName && tableName !== '') {\r      selectedRowKeys.forEach(item => {\r        let temp = getFieldValue(`checkbox-group_${item}`);\r        let arr = [];\r        temp.includes('can_search') ? arr.push(1) : arr.push(0);\r        temp.includes('can_edit') ? arr.push(1) : arr.push(0);\r        temp.includes('can_view') ? arr.push(1) : arr.push(0);\r        list.push({\r          id: item,\r          value: arr\r        })\r      });\r      this.props.actions.tableCollumManager({ list, tableName: getFieldValue('fileId') });\r    } else {\r      Modal.error({\r        title: '错误提示',\r        content: '请先选择文件',\r      });\r    }\r  };\r\r  showSuccess = (msg) => {\r    success({\r      title: '操作成功',\r      content: msg,\r      okText: '确定',\r      okType: 'info',\r      onOk: () => {\r        this.loadPage();\r      },\r    });\r  };\r\r  showError = (msg) => {\r    error({\r      title: '操作失败',\r      content: msg,\r      okText: '确定',\r      okType: 'info',\r    });\r  };\r\r  showInfo = (msg) => {\r    info({\r      title: '操作提示',\r      content: msg,\r      okText: '确定',\r      okType: 'info',\r    });\r  };\r\r  // 查询表头\r  changeSelectGroup = (value) => {\r    if (value && value !== '') {\r      this.loadPage();\r    }\r  };\r\r  resetForm = () => {\r    this.props.form.resetFields();\r  };\r\r  render() {\r    const { getFieldDecorator } = this.props.form;\r    const { columnListPage, fileList } = this.props;\r    const { selectedRowKeys, columnsObj } = this.state;\r    const { pageNum, total, pageSize } = this.props.pageInfo;\r\r\r    // 分页数据\r    const pagination = {\r      current: pageNum,\r      total: total,\r      pageSize: pageSize,\r      showSizeChanger: true,\r      showQuickJumper: true,\r      onChange: this.handlePageChange,\r      onShowSizeChange: this.handleShowSizeChange,\r    };\r\r    const rowSelection = {\r      selectedRowKeys,\r      onChange: (selectedRowKeys, selectedRows) => {\r        this.setState({\r          selectedRowKeys,\r          selectedRows\r        });\r      },\r      getCheckboxProps: record => ({\r        disabled: false, // Column configuration not to be checked\r        name: record.name,\r      }),\r    };\r\r    return (\r      <div className=\"page-index\">\r        <Content>\r          <Form\r            className=\"ant-advanced-search-form\"\r            onSubmit={this.handleSearch}\r          >\r            <Row gutter={24}>\r              <Col span={10}\r                   style={{ height: 70 }}>\r                <FormItem labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}\r                          label=\"文件\">\r                  {getFieldDecorator('fileId', {\r                    rules: [{\r                      required: true,\r                      whitespace: true,\r                      message: \"请先选择文件\",\r                    }]\r                  })(\r                    <Select\r                      showSearch\r                      optionFilterProp=\"children\"\r                      allowClear\r                      style={{ width: 400 }}\r                      placeholder=\"请选择\"\r                      onSelect={this.changeSelectGroup}>\r                      {\r                        fileList && fileList.length > 0 && fileList.map(item => {\r                          return (<Select.Option title={item.excelName} key={`tableFile_${item.id}`}\r                                                 value={item.tableName}>{item.excelName}</Select.Option>)\r                        })\r                      }\r                    </Select>,\r                  )}\r                </FormItem>\r              </Col>\r            </Row>\r          </Form>\r          <h3 style={{ margin: '0 0 5px', paddingTop: '25px', borderTop: '1px solid #ddd' }}></h3>\r          <Row gutter={24} style={{ marginBottom: '10px' }}>\r            <Col style={{ textAlign: 'left' }}\r                 span={12}>\r              <Button type=\"primary\" onClick={this.batchUpdate} disabled={!selectedRowKeys.length > 0}>批量更新</Button>\r            </Col>\r            <Col style={{ textAlign: 'right' }}\r                 span={12}>\r              <div className=\"search-count\">\r                共 {pagination.total} 条\r              </div>\r            </Col>\r          </Row>\r          <Table scroll={{ x: 'max-content' }}\r                 rowKey=\"id\"\r                 className=\"table-list\"\r                 rowSelection={rowSelection}\r                 dataSource={columnListPage}\r                 columns={columnsObj}\r                 pagination={pagination} />\r        </Content>\r      </div>\r    );\r  }\r}\r\rconst FinalEdit = Form.create()(\r  Edit,\r);\r\rconst mapStateToProps = (state) => {\r  const {\r    resultList,\r    operateSuccessFlag,\r    operateFailFlag,\r    operateInfo,\r    tableList,\r    fileList,\r    refreshFileFlag,\r    columnListPage,\r    pageInfo,\r    loading,\r  } = state.resumeReducer;\r  return {\r    resultList,\r    operateSuccessFlag,\r    operateFailFlag,\r    operateInfo,\r    tableList,\r    fileList,\r    refreshFileFlag,\r    columnListPage,\r    pageInfo,\r    loading,\r  }\r};\r\rconst mapDispatchToProps = dispatch => {\r  return {\r    actions: bindActionCreators(actions, dispatch)\r  }\r};\r\rexport default connect(\r  mapStateToProps,\r  mapDispatchToProps\r)(FinalEdit);\r"],"sourceRoot":""}