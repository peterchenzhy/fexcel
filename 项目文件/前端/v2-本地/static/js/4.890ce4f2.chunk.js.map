{"version":3,"sources":["pages/index/Index.jsx","components/RoleHOC/index.jsx"],"names":["open","es_form","url","export","layout","tableName","info","modal","error","changeSelectGroup","value","props","getColumnList","wrapperCol","span","getFileList","md","lg","actions","handleShowModal","params","Index","setState","_this","Object","classCallCheck","modalVar","flag","cb","possibleConstructorReturn","this","getPrototypeOf","form","setFieldsValue","list","_this$props$form","key","handleBlur","getFieldDecorator","id","forEach","temp","push","item","tableCollumName","tempForm","formKey","editData","resetForm","keys","resetFields","loadPage","isShowModal","pageNo","arguments","length","undefined","pageSize","validateFields","err","values","fields","state","postData","fileId","getTableList","fileLoading","selectedRowKeys","selectedRows","handleShowSizeChange","current","handleSearch","e","preventDefault","batchUpdate","getFieldValue","showSuccess","msg","success","title","content","okText","okType","onOk","showError","showInfo","exportFile","concat","api","nextProps","refreshFileFlag","resetState","defineProperty","handleFieldsBlur","_ref","_ref2","columnList","generateForm","operateSuccessFlag","inherits","createClass","operateInfo","operateFailFlag","pagination","pageNum","showSizeChanger","showQuickJumper","onChange","_this2","that","_this$props$form2","console","log","_this$props","dataSource","tableList","fileList","loading","role","_this$state","_this$props$pageInfo","pageInfo","total","columnsObj","filter","canView","map","excelCollumName","render","text","record","canEdit","react_default","a","createElement","FormItem","label","initialValue","target","input","placeholder","style","width","handlePageChange","onShowSizeChange","name","beforeUpload","file","showUploadList","customRequest","formData","FormData","WrapComponent","RoleComponent","_PureComponent","call","route","path","assign","PureComponent","hoistNonReactStatics"],"mappings":"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","file":"static/js/4.890ce4f2.chunk.js","sourcesContent":["/* eslint-disable prefer-destructuring */\r/**\r * Created by charles on 2018/5/30.\r */\rimport React, { PureComponent, Fragment } from 'react';\rimport './Index.less';\rimport { connect } from 'react-redux';\rimport { Button, Col, Form, Row, Select, Layout, Table, Modal, Spin, Input, Upload } from 'antd';\rimport { bindActionCreators } from \"redux\";\rimport actions from \"../../stores/actions/resumeActions\";\rimport url from \"../../services/api\";\rimport RoleHOC from '../../components/RoleHOC'\r\r\rconst FormItem = Form.Item;\rconst Content = Layout.Content;\rconst { info, error, success } = Modal;\rconst formOtherLayout = {\r  labelCol: { span: 10 },\r  wrapperCol: { span: 14 },\r};\rconst generalLayout = { md: 24, lg: 12, xl: 8 };\r\r\rclass Index extends PureComponent {\r  constructor(props) {\r    super(props);\r    this.state = {\r      isShowModal: false,\r      //文件上传loading\r      fileLoading: false,\r      confirmLoading: false,\r      selectedRowKeys: [],\r      selectedRows: [],\r      formSearch: [],\r      // 动态查询项\r      fields: []\r    };\r  }\r\r  componentDidMount() {\r    this.getFileList();\r  }\r\r  componentWillReceiveProps(nextProps) {\r    if (this.props.refreshFileFlag !== nextProps.refreshFileFlag && nextProps.refreshFileFlag) {\r      this.getFileList();\r      this.props.actions.resetState();\r    }\r    // 动态查询条件\r    if (this.props.columnList !== nextProps.columnList && nextProps.columnList.length > 0) {\r      this.generateForm(nextProps.columnList);\r    }\r    // 操作提示\r    if (this.props.operateSuccessFlag !== nextProps.operateSuccessFlag && nextProps.operateSuccessFlag === true) {\r      this.showSuccess(nextProps.operateInfo);\r      this.props.actions.resetState();\r    }\r    if (this.props.operateFailFlag !== nextProps.operateFailFlag && nextProps.operateFailFlag === true) {\r      this.showError(nextProps.operateInfo);\r      this.props.actions.resetState();\r    }\r  }\r\r  generateForm = (list) => {\r    const { getFieldDecorator, setFieldsValue } = this.props.form;\r    let temp = [],\r      tempForm = [];\r    list.forEach(item => {\r      if (item.canSearch === 1) {\r        temp.push(item.tableCollumName);\r        tempForm.push(item);\r      }\r    });\r    this.setState({\r      fields: [...new Set(temp)]\r    });\r    setFieldsValue({ 'keys': tempForm });\r  };\r\r  // 加载表格数据\r  loadPage = (pageNo = 1, pageSize = 50) => {\r    this.setState({\r      pageNo,\r    }, () => {\r      this.props.form.validateFields((err, values) => {\r        if (!err) {\r          const { fields } = this.state;\r          let postData = {};\r          postData.pageNo = pageNo;\r          postData.pageSize = pageSize;\r          postData.tableName = values.fileId;\r          fields.forEach(item => {\r            if (values[item] && values[item] !== '') {\r              postData[item] = values[item];\r            }\r          });\r          this.props.actions.getTableList(postData);\r          // 清空勾选\r          this.setState({\r            selectedRowKeys: [],\r            selectedRows: [],\r          });\r        }\r      });\r    });\r  };\r\r\r  // 翻页\r  handlePageChange = (pageNo, pageSize) => {\r    this.loadPage(pageNo, pageSize);\r  };\r\r  // 切换pageSize\r  handleShowSizeChange = (current, pageSize) => {\r    this.loadPage(1, pageSize);\r  };\r\r  handleSearch = (e) => {\r    e && e.preventDefault();\r    this.loadPage();\r  };\r\r  // 批量更新\r  batchUpdate = () => {\r    const { selectedRows } = this.state;\r    const { getFieldValue } = this.props.form;\r    this.props.actions.batchUpdate({ list: selectedRows, tableName: getFieldValue('fileId') });\r  };\r\r  showSuccess = (msg) => {\r    success({\r      title: '操作成功',\r      content: msg,\r      okText: '确定',\r      okType: 'info',\r      onOk: () => {\r        this.loadPage();\r      },\r    });\r  };\r\r  showError = (msg) => {\r    error({\r      title: '操作失败',\r      content: msg,\r      okText: '确定',\r      okType: 'info',\r    });\r  };\r\r  showInfo = (msg) => {\r    info({\r      title: '操作提示',\r      content: msg,\r      okText: '确定',\r      okType: 'info',\r    });\r  };\r\r  // 导出\r  exportFile = () => {\r    const { getFieldValue } = this.props.form;\r    const tableName = getFieldValue('fileId');\r    if (tableName && tableName !== '') {\r      // 下载模板文件\r      window.open(`${url.config.export}?tableName=${tableName}`);\r    } else {\r      this.showError('请先选择要导出的文件!');\r    }\r  };\r  // 查询表头\r  changeSelectGroup = (value) => {\r    if (value && value !== '') {\r      this.props.actions.getColumnList({ tableName: value });\r      this.loadPage();\r    }\r  };\r\r  getFileList = () => {\r    this.props.actions.getFileList();\r  };\r\r  // modal\r  handleShowModal = (params) => {\r    const { modalVar, flag, cb } = params;\r    this.setState({\r      [modalVar]: flag\r    });\r    cb && cb();\r  };\r\r  handleFieldsBlur = ({ key, value }) => {\r    const { setFieldsValue } = this.props.form;\r    setFieldsValue({ [key]: value });\r  };\r\r  handleBlur = ({ key, value, formKey, id }) => {\r    const { setFieldsValue } = this.props.form;\r    setFieldsValue({ [formKey]: value });\r    this.props.actions.editData({ key, value, id });\r  };\r  resetForm = () => {\r    this.props.form.resetFields();\r  };\r\r  render() {\r    const that = this;\r    const { getFieldDecorator, getFieldValue } = this.props.form;\r    console.log(getFieldValue('keys'));\r    const { columnList, tableList: dataSource, fileList, loading, role } = this.props;\r    console.log(role);\r    const { fileLoading, selectedRowKeys } = this.state;\r    const { pageNum, total, pageSize } = this.props.pageInfo;\r    const columnsObj = columnList && columnList.length > 0 ? columnList.filter(item => item.canView === 1).map(item => {\r      return ({\r        title: item.excelCollumName,\r        key: item.tableCollumName,\r        render: (text, record) => {\r          if (item.canEdit === 1) {\r            return (<FormItem label=\"\">\r              {getFieldDecorator(`${item.tableCollumName}_${record.id}`, {\r                initialValue: record[item.tableCollumName],\r                onChange: (e) => this.handleBlur({\r                  id: record.id,\r                  formKey: `${item.tableCollumName}_${record.id}`,\r                  value: e.target.value,\r                  key: item.tableCollumName,\r                })\r              })(\r                <Input placeholder=\"请输入\" style={{ width: '100px' }} />\r              )}\r            </FormItem>)\r          } else {\r            return (<span>{record[item.tableCollumName]}</span>)\r          }\r        }\r      })\r    }) : [];\r\r\r    // 分页数据\r    const pagination = {\r      current: pageNum,\r      total: total,\r      pageSize: pageSize,\r      showSizeChanger: true,\r      showQuickJumper: true,\r      onChange: this.handlePageChange,\r      onShowSizeChange: this.handleShowSizeChange,\r    };\r\r\r    const props = {\r      name: 'file',\r      beforeUpload(file, fileList) {\r      },\r      showUploadList: false,\r      customRequest(info) {\r        // 上传大小限制10M\r        // if (info.file && (info.file.size / 1024 / 1024) > 10) {\r        //   message.error('请上传小于10M的文件！');\r        //   return false;\r        // }\r        // that.setState({\r        //   fileLoading: true\r        // });\r        const formData = new FormData();\r        formData.append('excelFile', info.file);\r        // 调接口\r        that.props.actions.uploadFile(formData);\r      },\r    };\r\r    const rowSelection = {\r      selectedRowKeys,\r      onChange: (selectedRowKeys, selectedRows) => {\r        this.setState({\r          selectedRowKeys,\r          selectedRows\r        });\r      },\r      getCheckboxProps: record => ({\r        disabled: false, // Column configuration not to be checked\r        name: record.name,\r      }),\r    };\r\r    getFieldDecorator('keys', {\r      initialValue: [],\r    });\r    const inputs = getFieldValue('keys').map(item => {\r      return (\r        <Col {...generalLayout}>\r          <FormItem {...formOtherLayout} label={`${item.excelCollumName}`}>\r            {getFieldDecorator(`${item.tableCollumName}`, {\r              initialValue: '',\r              onChange: (e) => this.handleFieldsBlur({\r                id: item.tableCollumName,\r                value: e.target.value,\r              })\r            })(\r              <Input placeholder=\"请输入\" />\r            )}\r          </FormItem>\r        </Col>)\r    });\r\r    return (\r      <div className=\"page-index\">\r        <Spin spinning={fileLoading}>\r          <Content>\r            <Form\r              className=\"ant-advanced-search-form\"\r              onSubmit={this.handleSearch}\r            >\r              <Row gutter={24}>\r                <h3>文件上传</h3>\r                <Col span={10}\r                     style={{ height: 70 }}>\r                  <FormItem labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}\r                            label=\"文件\">\r                    {getFieldDecorator('fileId', {\r                      rules: [{\r                        required: true,\r                        whitespace: true,\r                        message: \"请先选择文件\",\r                      }]\r                    })(\r                      <Select\r                        showSearch\r                        optionFilterProp=\"children\"\r                        allowClear\r                        style={{ width: 400 }}\r                        placeholder=\"请选择\"\r                        onSelect={this.changeSelectGroup}>\r                        {\r                          fileList && fileList.length > 0 && fileList.map(item => {\r                            return (<Select.Option title={item.excelName} key={`tableFile_${item.id}`}\r                                                   value={item.tableName}>{item.excelName}</Select.Option>)\r                          })\r                        }\r                      </Select>,\r                    )}\r                  </FormItem>\r                </Col>\r                {\r                  role && role === 'admin' &&\r                  <Fragment>\r                    <Col span={8}\r                         style={{ textAlign: 'left' }}>\r                      <Upload {...props}>\r                        <Button type=\"primary\">上传文件</Button>\r                      </Upload>\r                      <Button\r                        style={{ marginLeft: '10px' }}\r                        type=\"default\"\r                        onClick={this.exportFile}>导出</Button>\r                    </Col>\r                    <Col style={{ clear: 'both' }} />\r                  </Fragment>\r                }\r\r              </Row>\r              <Row gutter={24}>\r                {\r                  inputs\r                }\r              </Row>\r              <Row gutter={24}>\r                <Col {...generalLayout} style={{ marginLeft: '100px', marginBottom: '15px' }}>\r                  <Button type=\"primary\" htmlType=\"submit\">查询</Button>&nbsp;&nbsp;&nbsp;&nbsp;\r                  <Button type=\"default\" onClick={this.resetForm}>重置</Button>\r                </Col>\r              </Row>\r            </Form>\r            <h3 style={{ margin: '0 0 5px', paddingTop: '25px', borderTop: '1px solid #ddd' }}>文件记录</h3>\r            <Row gutter={24} style={{ marginBottom: '10px' }}>\r              <Col style={{ textAlign: 'left' }}\r                   span={12}>\r                <Button type=\"primary\" onClick={this.batchUpdate} disabled={!selectedRowKeys.length > 0}>批量更新</Button>\r              </Col>\r              <Col style={{ textAlign: 'right' }}\r                   span={12}>\r                <div className=\"search-count\">\r                  共 {pagination.total} 条\r                </div>\r              </Col>\r            </Row>\r            <Spin spinning={loading}>\r              <Table scroll={{ x: 'max-content' }}\r                     rowKey=\"id\"\r                     className=\"table-list\"\r                     rowSelection={rowSelection}\r                     dataSource={dataSource}\r                     columns={columnsObj}\r                     pagination={pagination} />\r            </Spin>\r          </Content>\r        </Spin>\r\r      </div>\r    );\r  }\r}\r\rconst FinalIndex = Form.create()(\r  Index,\r);\r\rconst mapStateToProps = (state) => {\r  const {\r    resultList,\r    operateSuccessFlag,\r    operateFailFlag,\r    operateInfo,\r    tableList,\r    fileList,\r    refreshFileFlag,\r    columnList,\r    pageInfo,\r    loading,\r  } = state.resumeReducer;\r  return {\r    resultList,\r    operateSuccessFlag,\r    operateFailFlag,\r    operateInfo,\r    tableList,\r    fileList,\r    refreshFileFlag,\r    columnList,\r    pageInfo,\r    loading,\r  }\r};\r\rconst mapDispatchToProps = dispatch => {\r  return {\r    actions: bindActionCreators(actions, dispatch)\r  }\r};\r\rexport default connect(\r  mapStateToProps,\r  mapDispatchToProps\r)(RoleHOC(FinalIndex));\r","import React, { PureComponent } from 'react';\rimport hoistNonReactStatics from 'hoist-non-react-statics';\r\rexport default (WrapComponent) => {\r  class RoleComponent extends PureComponent {\r    constructor(props) {\r      super(props);\r      this.state = {\r        role: props.route.path === '/employee' ? 'employee' : 'admin'\r      }\r    }\r\r    componentWillReceiveProps(nextProps) {\r      if (this.props.route.path !== nextProps.route.path && nextProps.route.path !== '') {\r        const routing = nextProps.route.path;\r        if (routing === '/employee') {\r          this.setState({\r            role: 'employee'\r          });\r        } else {\r          this.setState({\r            role: 'admin'\r          });\r        }\r      }\r    }\r\r    render() {\r      const { role } = this.state;\r      return (\r        <WrapComponent role={role} {...this.props} />\r      )\r    }\r  }\r\r  return hoistNonReactStatics(RoleComponent, WrapComponent);\r};\r"],"sourceRoot":""}