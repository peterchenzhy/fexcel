{"version":3,"sources":["utils/types.js","services/axiosConfig.js","services/axios.js","stores/actions/resumeActions.js","stores/reducers/resumeReducer.js","stores/reducers/index.js","stores/index.js","App.js","index.js","services/api.js"],"names":["async","type","concat","axiosUploadConfig","headers","Content-Type","method","withCredentials","validateStatus","status","transformResponse","respData","axiosBaseConfig","baseURL","responseType","transformRequest","data","JSON","stringify","window","eventStore","EE","services_axios","url","reqData","axiosConfig","instance","axios","create","interceptors","response","use","res","parse","error","toUpperCase","get","params","console","log","post","__webpack_require__","d","__webpack_exports__","types","prefix","_len","arguments","length","args","Array","_key","reduce","map","v","createTypes","editStore","param","EDIT_STORE","bridge","getFileList","GET_FILE_LIST","payload","fetch","config","fileList","fileExport","FILE_EXPORT","export","uploadFile","UPLOAD_FILE","upload","getTableList","GET_TABLE_LIST","tableList","getColumnList","GET_COLUMN_LIST","columnList","resetState","RESET_STATE","editData","EDIT_DATA","batchUpdate","BATCH_UPDATE","tableName","list","initialState","operateSuccessFlag","operateFailFlag","operateInfo","loading","pageInfo","pageSize","pageNum","total","refreshFileFlag","reducers","resumeReducer","state","undefined","action","Object","objectSpread","editObj","tempList","toConsumableArray","item","id","key","value","GET_FILE_LIST_SUCCESS","message","success","BATCH_UPDATE_SUCCESS","FILE_EXPORT_SUCCESS","GET_COLUMN_LIST_SUCCESS","UPLOAD_FILE_SUCCESS","GET_TABLE_LIST_PENDING","GET_TABLE_LIST_SUCCESS","_action$payload$data","store","devtools","devToolsExtension","noop","rootReducer","combineReducers","routing","routerReducer","middlewares","routerMiddleware","browserHistory","thunkMiddleware","promiseMiddleware","promiseTypeSuffixes","enhancers","applyMiddleware","apply","createStore","compose","pkg","Index","Promise","all","e","then","bind","routes","path","getComponent","location","cb","module","default","history","syncHistoryWithStore","ReactDOM","render","react_default","a","createElement","lib","props","es","document","getElementById"],"mappings":"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","file":"static/js/main.371108c9.chunk.js","sourcesContent":["export const createTypes = (prefix, ...args) => args.reduce((types, type) => {\n  [].concat(type).map((v) => types[v] = prefix + v);\n  return types;\n}, {});\n\nexport const async = (type) => [type, `${type}_PENDING`, `${type}_SUCCESS`, `${type}_ERROR`];","export const axiosUploadConfig = {\n  headers: { 'Content-Type': 'multipart/form-data' },\n  method: 'post',\n  withCredentials: true, // default\n  // http请求返回状态码检查\n  validateStatus: status => status >= 200 && status < 300, // default\n  // 返回数据预处理\n  transformResponse: [respData => respData,\n  ],\n};\n\nexport const axiosDownloadConfig = {\n  baseURL: '/',\n  headers: { 'Content-Type': 'application/json' },\n  method: 'post',\n  // 跨域请求，是否带上认证信息\n  withCredentials: true, // default\n  // http返回的数据类型\n  // 默认是json，可选'arraybuffer', 'blob', 'document', 'json', 'text', 'stream'\n  responseType: 'blob', // default\n  // http请求返回状态码检查\n  validateStatus: status => status >= 200 && status < 300, // default\n  // 请求数据预处理\n  transformRequest: [(data, headers) => {\n    // 请求对象转换成jon字符串\n    if (typeof data === 'object') {\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n  // 返回数据预处理\n  transformResponse: [respData => respData,\n  ],\n};\n\n// axios配置\nexport const axiosBaseConfig = {\n  baseURL: '/',\n  headers: { 'Content-Type': 'application/json' },\n  method: 'post',\n  // 跨域请求，是否带上认证信息\n  withCredentials: false, // default\n  // http返回的数据类型\n  // 默认是json，可选'arraybuffer', 'blob', 'document', 'json', 'text', 'stream'\n  responseType: 'json', // default\n  // http请求返回状态码检查\n  validateStatus: status => status >= 200 && status < 300, // default\n  // 请求数据预处理\n  transformRequest: [(data, headers) => {\n    // 请求对象转换成jon字符串\n    if (typeof data === 'object') {\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n};\n","import axios from 'axios';\nimport EE from 'eventemitter3';\nimport { axiosBaseConfig } from './axiosConfig';\n\nwindow.eventStore = new EE();\n\nexport default (url, reqData, axiosConfig, method) => {\n  const instance = axios.create(axiosConfig || axiosBaseConfig);\n  instance.interceptors.response.use(\n    (res) => {\n      if (typeof res.data !== 'object') {\n        return JSON.parse(res.data);\n      }\n      return res.data || res;\n    },\n    (error) => {\n      return JSON.parse(error.response.data)\n    }\n  );\n  if (method && method.toUpperCase() === 'GET') {\n    return instance.get(url, { params: reqData });\n  } else {\n    console.log(reqData);\n    return instance.post(url, reqData);\n  }\n}\n\n","import { createTypes, async } from '../../utils/types';\nimport fetch from \"../../services/axios\";\nimport url from \"../../services/api\";\nimport { axiosUploadConfig } from \"../../services/axiosConfig\";\n\nexport const types = createTypes('resume/',\n  async('GET_FILE_LIST'),\n  async('GET_TABLE_LIST'),\n  async('GET_COLUMN_LIST'),\n  async('UPLOAD_FILE'),\n  async('FILE_EXPORT'),\n  async('SUBMIT_RESUME'),\n  async('BATCH_UPDATE'),\n  'EDIT_STORE',\n  'RESET_STATE',\n  'EDIT_DATA'\n);\n\n// 获取文件list\nconst getFileList = (params) => ({\n  type: types.GET_FILE_LIST,\n  payload: fetch(url.config.fileList, params, {}, 'get')\n});\n\n// 获取table list\nconst getTableList = (params) => ({\n  type: types.GET_TABLE_LIST,\n  payload: fetch(url.config.tableList, params)\n});\n\n// 获取table list\nconst getColumnList = (params) => ({\n  type: types.GET_COLUMN_LIST,\n  payload: fetch(url.config.columnList, params, {}, 'get')\n});\n\n// 附件上传\nconst uploadFile = (params) => {\n  return {\n    type: types.UPLOAD_FILE,\n    payload: fetch(url.config.upload, params, axiosUploadConfig)\n  }\n};\n// 附件上传\nconst fileExport = (params) => {\n  return {\n    type: types.FILE_EXPORT,\n    payload: fetch(url.config.export, params, {}, 'get')\n  }\n};\n// 批量更新\nconst batchUpdate = (params) => {\n  return {\n    type: types.BATCH_UPDATE,\n    payload: fetch(`${url.config.batchUpdate}?tableName=${params.tableName}`, params.list)\n  }\n};\n\nconst editStore = (param) => ({\n  type: types.EDIT_STORE,\n  bridge: param\n});\nconst editData = (param) => ({\n  type: types.EDIT_DATA,\n  bridge: param\n});\n\n\n// reset state\nconst resetState = () => ({\n  type: types.RESET_STATE,\n});\n\nexport default {\n  editStore,\n  getFileList,\n  fileExport,\n  uploadFile,\n  getTableList,\n  getColumnList,\n  resetState,\n  editData,\n  batchUpdate,\n}\n","import { types } from '../actions/resumeActions';\n\nlet initialState = {\n  operateSuccessFlag: false,\n  operateFailFlag: false,\n  operateInfo: '',\n  loading: false,\n  pageInfo: {\n    pageSize: 20,\n    pageNum: 1,\n    total: 0\n  },\n  tableList: [],\n  fileList: [],\n  refreshFileFlag: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.EDIT_STORE:\n      return {\n        ...state,\n        ...action.bridge\n      };\n    case types.EDIT_DATA: {\n      const editObj = action.bridge;\n      let tempList = [...state.tableList];\n      tempList.map(item => {\n        if (editObj.id === item.id) {\n          item[editObj.key] = editObj.value;\n        }\n      });\n      return {\n        ...state,\n        tableList: tempList\n      };\n    }\n    // GET_FILE_LIST\n    case types.GET_FILE_LIST_SUCCESS: {\n      const { message } = action.payload;\n      if (action.payload && action.payload.success) {\n        return {\n          ...state,\n          fileList: action.payload.data || [],\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: message || '接口获取失败',\n          fileList: [],\n        };\n      }\n    }\n    // BATCH_UPDATE\n    case types.BATCH_UPDATE_SUCCESS: {\n      const { message } = action.payload;\n      if (action.payload && action.payload.success) {\n        return {\n          ...state,\n          operateSuccessFlag: true,\n          operateFailFlag: false,\n          operateInfo: message || '更新成功',\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: message || '更新失败',\n        };\n      }\n    }\n    // FILE_EXPORT\n    case types.FILE_EXPORT_SUCCESS: {\n      if (action.payload && action.payload.success) {\n        return {\n          ...state,\n          operateSuccessFlag: true,\n          operateFailFlag: false,\n          operateInfo: '成功',\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: action.payload.message || '操作失败',\n        };\n      }\n    }\n    // GET_column_LIST\n    case types.GET_COLUMN_LIST_SUCCESS: {\n      const { message } = action.payload;\n      if (action.payload.success) {\n        return {\n          ...state,\n          columnList: action.payload.data || []\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: message || '接口获取失败',\n          columnList: []\n        };\n      }\n    }\n    case types.UPLOAD_FILE_SUCCESS:\n      if (action.payload.success) {\n        return {\n          ...state,\n          operateSuccessFlag: true,\n          operateFailFlag: false,\n          operateInfo: '成功',\n          refreshFileFlag: true,\n        };\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: action.payload.message || '操作失败',\n        };\n      }\n    case types.GET_TABLE_LIST_PENDING: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n    case types.GET_TABLE_LIST_SUCCESS:\n      if (action.payload.success) {\n        const { list, pageSize, pageNum, total } = action.payload.data;\n        return {\n          ...state,\n          pageInfo: {\n            pageSize,\n            pageNum,\n            total\n          },\n          tableList: list,\n          loading: false\n        }\n      } else {\n        return {\n          ...state,\n          operateSuccessFlag: false,\n          operateFailFlag: true,\n          operateInfo: action.payload.message || '接口获取失败',\n          tableList: [],\n          loading: false\n        };\n      }\n    case types.RESET_STATE:\n      return {\n        ...state,\n        operateSuccessFlag: false,\n        operateFailFlag: false,\n        operateInfo: '',\n        refreshFileFlag: false,\n      };\n    default:\n      return state;\n  }\n}\n","import resumeReducer from './resumeReducer';\n\nexport default {\n  resumeReducer\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport createLogger from 'redux-logger';\nimport reducers from './reducers';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { browserHistory } from 'react-router';\nimport { routerMiddleware, routerReducer } from 'react-router-redux';\n\nexport default function store() {\n  const devtools = window.devToolsExtension || (() => (noop) => noop);\n\n  const rootReducer = combineReducers({\n    ...reducers,\n    routing: routerReducer\n  });\n  const middlewares = [routerMiddleware(browserHistory), thunkMiddleware, promiseMiddleware({ promiseTypeSuffixes: ['PENDING', 'SUCCESS', 'ERROR'] })];\n\n  if (process.env.NODE_ENV !== 'production') {\n    middlewares.push(createLogger());\n  }\n\n  const enhancers = [applyMiddleware(...middlewares), devtools()];\n\n  const initState = {};\n  const store = createStore(rootReducer, initState, compose(...enhancers));\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers/index');\n      const nextRootReducer = combineReducers({\n        ...nextReducer,\n        routing: routerReducer\n      });\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n\n}\n\n","import React from 'react';\nimport { Router } from 'react-router';\n\nconst Index = import('./pages/index/Index');\nconst getComponent = (pkg) => (location, cb) => {\n  pkg.then((module) => {\n    cb(null, module.default);\n  });\n};\nconst routes = [\n  {\n    path: '/',\n    getComponent: getComponent(Index)\n  }\n];\n\nexport default (props) => <Router history={props.history}\n                                  routes={routes} />;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { browserHistory } from 'react-router';\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport store from './stores';\nimport 'babel-polyfill';\nimport Routes from './App';\nimport './styles/reset.less';\nimport './styles/index.less';\n\nconst history = syncHistoryWithStore(browserHistory, store());\nif (module.hot) {\n  module.hot.accept()\n}\n\nReactDOM.render(\n  <Provider store={store()}>\n    <Routes history={history} />\n  </Provider>,\n  document.getElementById('root')\n);\n","let url = {};\nurl.prefix = 'http://47.100.242.85:8112/';\nurl.config = {};\n// table list\nurl.config.tableList = `${url.prefix}queryData`;\n// column\nurl.config.columnList = `${url.prefix}getTableCollum`;\n// file map\nurl.config.fileList = `${url.prefix}getFileList`;\n// upload\nurl.config.upload = `${url.prefix}file/upload`;\n// export\nurl.config.export = `${url.prefix}file/export`;\n// batch\nurl.config.batchUpdate = `${url.prefix}batchCommit`;\n\nexport default url;\n"],"sourceRoot":""}