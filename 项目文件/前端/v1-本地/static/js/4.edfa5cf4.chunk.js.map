{"version":3,"sources":["pages/index/Index.jsx"],"names":["fileLoading","antd_es_form__WEBPACK_IMPORTED_MODULE_28__","formSearch","Content","antd_es_layout__WEBPACK_IMPORTED_MODULE_26__","info","antd_es_modal__WEBPACK_IMPORTED_MODULE_24__","error","success","formOtherLayout","labelCol","span","wrapperCol","generalLayout","md","lg","xl","Index","_PureComponent","props","_this","Object","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_18__","this","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_20__","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_21__","call","generateForm","list","_this$props$form","form","setFieldsValue","getFieldDecorator","temp","tempForm","forEach","item","canSearch","push","tableCollumName","setState","fields","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_17__","Set","keys","loadPage","pageNo","arguments","length","undefined","pageSize","validateFields","err","values","state","postData","tableName","fileId","actions","getTableList","handlePageChange","handleShowSizeChange","current","handleSearch","e","preventDefault","batchUpdate","selectedRows","getFieldValue","showSuccess","msg","title","content","okText","okType","onOk","showError","showInfo","exportFile","open","concat","_services_api__WEBPACK_IMPORTED_MODULE_35__","getFileList","nextProps","modalVar","refreshFileFlag","flag","cb","handleFieldsBlur","_ref","key","value","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_16__","handleBlur","_ref2","formKey","id","editData","resetForm","resetFields","isShowModal","columnList","operateSuccessFlag","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_22__","_Users_tuskiend_lianjia_workspace_antd_sample_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_19__","operateFailFlag","that","pagination","pageNum","showSizeChanger","showQuickJumper","onChange","operateInfo","resetState","_this2","_this$props$form2","getFieldProps","console","log","_this$props","dataSource","tableList","fileList","loading","_this$state","confirmLoading","selectedRowKeys","_this$props$pageInfo","pageInfo","total","columnsObj","filter","canView","map","excelCollumName","render","text","record","canEdit","react__WEBPACK_IMPORTED_MODULE_29___default","a","createElement","FormItem","label","initialValue","target","antd_es_input__WEBPACK_IMPORTED_MODULE_15__","placeholder","onShowSizeChange","name","beforeUpload","file","showUploadList","customRequest","formData","FormData"],"mappings":"icA+BMA,UAAaC,EAIbC,QAPWC,EAQXC,EAAA,EAAAD,QAAAE,EAAAC,EAAA,EAAAD,KAAAE,EAAAD,EAAA,EAAAC,MAAAC,EAAAF,EAAA,EAAAE,QAAAC,EAAA,CAAAC,SAAA,CAAAC,KAAA,GAAAC,WAAA,CAAAD,KAAA,KAAAE,EAAA,CAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,EAAA,SAAAC,GAAA,SAAAD,EAAAE,GAAA,IAAAC,EAmBOD,OAnBPE,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IAAAG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAAJ,KAAAQ,aAAA,SAAAC,GAAA,IAAAC,EAAAT,EAAAD,MAAAW,KAAAC,GAAAF,EAAAG,kBAAAH,EAAAE,gBAAAE,EAAA,GAAAC,EAAA,GAAAN,EAAAO,QAAA,SAAAC,GAAA,IAAAA,EAAAC,YAAAJ,EAAAK,KAAAF,EAAAG,iBAAAL,EAAAI,KAAAF,MAAAhB,EAAAoB,SAAA,CAAAC,OAAApB,OAAAqB,EAAA,EAAArB,CAAA,IAAAsB,IAAAV,MAAAF,EAAA,CAAAa,KAAAV,KAAAd,EAAAyB,SAAA,eAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,KAAAG,EAAAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAA3B,EAAAoB,SAAA,CAAAM,UAAA,WAAA1B,EAAAD,MAAAW,KAAAqB,eAAA,SAAAC,EAAAC,GAAA,IAAAD,EAAA,KAAAX,EAAArB,EAAAkC,MAAAb,OAAAc,EAAA,GAAAA,EAAAT,SAAAS,EAAAL,WAAAK,EAAAC,UAAAH,EAAAI,OAAAhB,EAAAN,QAAA,SAAAC,GAAAiB,EAAAjB,IAAA,KAAAiB,EAAAjB,KAAAmB,EAAAnB,GAAAiB,EAAAjB,MAAAhB,EAAAD,MAAAuC,QAAAC,aAAAJ,SAAAnC,EAAAwC,iBAAA,SAAAd,EAAAI,GAAA9B,EAAAyB,SAAAC,EAAAI,IAAA9B,EAAAyC,qBAAA,SAAAC,EAAAZ,GAAA9B,EAAAyB,SAAA,EAAAK,IAAA9B,EAAA2C,aAAA,SAAAC,QAAAC,iBAAA7C,EAAAyB,YAAAzB,EAAA8C,YAAA,eAAAC,EAAA/C,EAAAkC,MAAAa,aAAAC,EAAAhD,EAAAD,MAAAW,KAAAsC,cAAAhD,EAAAD,MAAAuC,QAAAQ,YAAA,CAAAtC,KAAAuC,EAAAX,UAAAY,EAAA,aAAAhD,EAAAiD,YAAA,SAAAC,GAAA9D,EAAA,CAAA+D,MAAA,2BAAAC,QAAAF,EAAAG,OAAA,eAAAC,OAAA,OAAAC,KAAA,WAAAvD,EAAAyB,eAAAzB,EAAAwD,UAAA,SAAAN,GAAA/D,EAAA,CAAAgE,MAAA,2BAAAC,QAAAF,EAAAG,OAAA,eAAAC,OAAA,UAAAtD,EAAAyD,SAAA,SAAAP,GAAAjE,EAAA,CAAAkE,MAAA,2BAAAC,QAAAF,EAAAG,OAAA,eAAAC,OAAA,UAAAtD,EAAA0D,WAAA,eAAAtB,GAAAY,EAAAhD,EAAAD,MAAAW,KAAAsC,eAAA,UAAAZ,GAAA,KAAAA,EACAf,OAAQsC,KAXO,GAAAC,OAAAC,mNAgBZC,mFAGmBC,GACxB,IAAIC,EAAWC,WAAXC,EAA+BH,EAAUE,SAAzCE,GAA4DJ,WAAUE,SAI1E,EAJ0EA,CAI1E,GAAAD,EAAAE,IAAAC,QAAAnE,EAAAoE,iBAAA,SAAAC,GAAA,IAAAC,EAAAD,EAAAC,IAAAC,EAAAF,EAAAE,OAAA5D,EAAAX,EAAAD,MAAAW,KAAAC,gBAAAV,OAAAuE,EAAA,EAAAvE,CAAA,GAAAqE,EAAAC,KAAAvE,EAAAyE,WAAA,SAAAC,GAAA,IAAAJ,EAAAI,EAAAJ,IAAAC,EAAAG,EAAAH,MAAAI,EAAAD,EAAAC,QAAAC,EAAAF,EAAAE,IAAAjE,EAAAX,EAAAD,MAAAW,KAAAC,gBAAAV,OAAAuE,EAAA,EAAAvE,CAAA,GAAA0E,EAAAJ,IAAAvE,EAAAD,MAAAuC,QAAAuC,SAAA,CAAAP,MAAAC,QAAAK,QAAA5E,EAAA8E,UAAA,WAAA9E,EAAAD,MAAAW,KAAAqE,eAAA/E,EAAAkC,MAAA,CAAA8C,aAAA,EACApG,aAASmB,EAAMkF,gBAAelB,EAAUkB,gBAAclB,GAAShB,aAAYnB,cACpErB,GAGPc,OAAI,IAAW6D,SAnBbjF,OAAAkF,EAAA,EAAAlF,CAAAJ,EAAAC,GAmBaoF,OAAXE,EAI+BrB,EAJpBmB,CAIoBnB,EAAUsB,0BAA6BA,iBACxElF,KAAe4D,gBAAf,CAAAO,IACA,4BAAAC,kBA2IKpE,KACPJ,MAAMuF,kBADCvB,EAAAE,iBAECrD,oBAFDT,KAAA2D,cAEClD,WAAmBoC,sBAiCrBuC,WAAUN,aACLO,EACJP,YACLnD,EAAUA,WACV2D,OAAe,GAAEtF,KACjBuF,aAAe3B,EACf4B,YAYExF,KAAAJ,MAAAmF,qBAAAnB,EAAAmB,qBAAA,IAAAnB,EAAAmB,qBAAA/E,KAAA8C,YAAAc,EAAA6B,aAAAzF,KAAAJ,MAAAuC,QAAAuD,cAAA1F,KAAAJ,MAAAsF,kBAAAtB,EAAAsB,kBAAA,IAAAtB,EAAAsB,kBAAAlF,KAAAqD,UAAAO,EAAA6B,aAAAzF,KAAAJ,MAAAuC,QAAAuD,gBAAA,CAAAvB,IAAA,SAAAC,MAAA,eAAAuB,EAAA3F,KAAAmF,EAAAnF,KAAA4F,EAAA5F,KAAAJ,MAAAW,KAAAE,EAAAmF,EAAAnF,kBAAAoC,EAAA+C,EAAA/C,cAAA+C,EAAAC,cAAAC,QAAAC,IAAAlD,EAAA,aAAAmD,EAAAhG,KAAAJ,MAAAkF,EAAAkB,EAAAlB,WAAAmB,EAAAD,EAAAE,UAAAC,EAAAH,EAAAG,SAAAC,EAAAJ,EAAAI,QAAAC,EAAArG,KAAA+B,MAAA8C,EAAAwB,EAAAxB,YAAAyB,EAAAD,EAAAC,eAAA7H,EAAA4H,EAAA5H,YAAA8H,EAAAF,EAAAE,gBAAAC,GAAAH,EAAA1H,WAAAqB,KAAAJ,MAAA6G,UAAApB,EAAAmB,EAAAnB,QAAAqB,EAAAF,EAAAE,MAAA/E,EAAA6E,EAAA7E,SAAAgF,EAAA7B,KAAArD,OAAA,EAAAqD,EAAA8B,OAAA,SAAA/F,GAAA,WAAAA,EAAAgG,UAAAC,IAAA,SAAAjG,GAAA,OAAAmC,MAAAnC,EAAAkG,gBAAA5C,IAAAtD,EAAAG,gBAAAgG,OAAA,SAAAC,EAAAC,GAAA,WAAArG,EAAAsG,QAAAC,EAAAC,EAAAC,cAAAC,EAAA,CAAAC,MAAA,IAAA/G,EAAA,GAAAgD,OAAA5C,EAAAG,gBAAA,KAAAyC,OAAAyD,EAAAzC,IAAA,CAAAgD,aAAAP,EAAArG,EAAAG,iBAAAwE,SAAA,SAAA/C,GAAA,OAAAkD,EAAArB,WAAA,CAAAG,GAAAyC,EAAAzC,GAAAD,QAAA,GAAAf,OAAA5C,EAAAG,gBAAA,KAAAyC,OAAAyD,EAAAzC,IAAAL,MAAA3B,EAAAiF,OAAAtD,MAAAD,IAAAtD,EAAAG,oBAAAP,CAAA2G,EAAAC,EAAAC,cAAAK,EAAA,GAAAC,YAAA,yBAAAR,EAAAC,EAAAC,cAAA,YAAAJ,EAAArG,EAAAG,sBAAA,GACAoE,EAAA,CAAA7C,QAAA8C,EAAAqB,QAAA/E,WAAA2D,iBAAA,EAAAC,iBAAA,EAAAC,SAAAxF,KAAAqC,iBAAAwF,iBAAA7H,KAAAsC,sBAAA1C,EAAA,CAAAkI,KAAA,OAAAC,aAAA,SAAAC,EAAA7B,KAAA8B,gBAAA,EAAAC,cAAA,SAAApJ,GAsBAgJ,IAAIK,EAASL,IAFSM,SAM1B3H,SAAkB,YAChBgH,EAAcO,80FArPd","file":"static/js/4.edfa5cf4.chunk.js","sourcesContent":["/* eslint-disable prefer-destructuring */\r/**\r * Created by charles on 2018/5/30.\r */\rimport React, { PureComponent } from 'react';\rimport './Index.less';\rimport { connect } from 'react-redux';\rimport { Button, Col, Form, message, Row, Select, Layout, Table, Modal, Spin, Input, Upload } from 'antd';\rimport moment from 'moment/moment';\rimport { bindActionCreators } from \"redux\";\rimport actions from \"../../stores/actions/resumeActions\";\rimport url from \"../../services/api\";\rimport axios from 'axios';\r\r\rconst FormItem = Form.Item;\rconst Content = Layout.Content;\rconst { info, error, success } = Modal;\rconst formOtherLayout = {\r  labelCol: { span: 6 },\r  wrapperCol: { span: 18 },\r};\rconst generalLayout = { md: 24, lg: 12, xl: 8 };\r\r\rclass Index extends PureComponent {\r  constructor(props) {\r    super(props);\r    this.state = {\r      isShowModal: false,\r      //文件上传loading\r      fileLoading: false,\r      confirmLoading: false,\r      selectedRowKeys: [],\r      selectedRows: [],\r      formSearch: [],\r      // 动态查询项\r      fields: []\r    };\r  }\r\r  componentDidMount() {\r    this.getFileList();\r  }\r\r  componentWillReceiveProps(nextProps) {\r    if (this.props.refreshFileFlag !== nextProps.refreshFileFlag && nextProps.refreshFileFlag) {\r      this.getFileList();\r      this.props.actions.resetState();\r    }\r    // 动态查询条件\r    if (this.props.columnList !== nextProps.columnList && nextProps.columnList.length > 0) {\r      this.generateForm(nextProps.columnList);\r    }\r    // 操作提示\r    if (this.props.operateSuccessFlag !== nextProps.operateSuccessFlag && nextProps.operateSuccessFlag === true) {\r      this.showSuccess(nextProps.operateInfo);\r      this.props.actions.resetState();\r    }\r    if (this.props.operateFailFlag !== nextProps.operateFailFlag && nextProps.operateFailFlag === true) {\r      this.showError(nextProps.operateInfo);\r      this.props.actions.resetState();\r    }\r  }\r\r  generateForm = (list) => {\r    const { getFieldDecorator, setFieldsValue } = this.props.form;\r    let temp = [],\r      tempForm = [];\r    list.forEach(item => {\r      if (item.canSearch === 1) {\r        temp.push(item.tableCollumName);\r        tempForm.push(item);\r      }\r    });\r    this.setState({\r      fields: [...new Set(temp)]\r    });\r    setFieldsValue({ 'keys': tempForm });\r  };\r\r  // 加载表格数据\r  loadPage = (pageNo = 1, pageSize = 50) => {\r    this.setState({\r      pageNo,\r    }, () => {\r      this.props.form.validateFields((err, values) => {\r        if (!err) {\r          const { fields } = this.state;\r          let postData = {};\r          postData.pageNo = pageNo;\r          postData.pageSize = pageSize;\r          postData.tableName = values.fileId;\r          fields.forEach(item => {\r            if (values[item] && values[item] !== '') {\r              postData[item] = values[item];\r            }\r          });\r          this.props.actions.getTableList(postData);\r        }\r      });\r    });\r  };\r\r\r  // 翻页\r  handlePageChange = (pageNo, pageSize) => {\r    this.loadPage(pageNo, pageSize);\r  };\r\r  // 切换pageSize\r  handleShowSizeChange = (current, pageSize) => {\r    this.loadPage(1, pageSize);\r  };\r\r  handleSearch = (e) => {\r    e && e.preventDefault();\r    this.loadPage();\r  };\r\r  // 批量更新\r  batchUpdate = () => {\r    const { selectedRows } = this.state;\r    const { getFieldValue } = this.props.form;\r    this.props.actions.batchUpdate({ list: selectedRows, tableName: getFieldValue('fileId') });\r  };\r\r  showSuccess = (msg) => {\r    success({\r      title: '操作成功',\r      content: msg,\r      okText: '确定',\r      okType: 'info',\r      onOk: () => {\r        this.loadPage();\r      },\r    });\r  };\r\r  showError = (msg) => {\r    error({\r      title: '操作失败',\r      content: msg,\r      okText: '确定',\r      okType: 'info',\r    });\r  };\r\r  showInfo = (msg) => {\r    info({\r      title: '操作提示',\r      content: msg,\r      okText: '确定',\r      okType: 'info',\r    });\r  };\r\r  // 导出\r  exportFile = () => {\r    const { getFieldValue } = this.props.form;\r    const tableName = getFieldValue('fileId');\r    if (tableName && tableName !== '') {\r      // 下载模板文件\r      window.open(`${url.config.export}?tableName=${tableName}`);\r    } else {\r      this.showError('请先选择要导出的文件!');\r    }\r  };\r  // 查询表头\r  changeSelectGroup = (value) => {\r    value && value !== '' && this.props.actions.getColumnList({ tableName: value });\r  };\r\r  getFileList = () => {\r    this.props.actions.getFileList();\r  };\r\r  // modal\r  handleShowModal = (params) => {\r    const { modalVar, flag, cb } = params;\r    this.setState({\r      [modalVar]: flag\r    });\r    cb && cb();\r  };\r\r  handleFieldsBlur = ({ key, value }) => {\r    const { setFieldsValue } = this.props.form;\r    setFieldsValue({ [key]: value });\r  };\r\r  handleBlur = ({ key, value, formKey, id }) => {\r    const { setFieldsValue } = this.props.form;\r    setFieldsValue({ [formKey]: value });\r    this.props.actions.editData({ key, value, id });\r  };\r  resetForm = () => {\r    this.props.form.resetFields();\r  };\r\r  render() {\r    const that = this;\r    const { getFieldDecorator, getFieldValue, getFieldProps } = this.props.form;\r    console.log(getFieldValue('keys'));\r    const { columnList, tableList: dataSource, fileList, loading } = this.props;\r    const { isShowModal, confirmLoading, fileLoading, selectedRowKeys, formSearch } = this.state;\r    const { pageNum, total, pageSize } = this.props.pageInfo;\r    const columnsObj = columnList && columnList.length > 0 ? columnList.filter(item => item.canView === 1).map(item => {\r      return ({\r        title: item.excelCollumName,\r        key: item.tableCollumName,\r        render: (text, record) => {\r          if (item.canEdit === 1) {\r            return (<FormItem label=\"\">\r              {getFieldDecorator(`${item.tableCollumName}_${record.id}`, {\r                initialValue: record[item.tableCollumName],\r                onChange: (e) => this.handleBlur({\r                  id: record.id,\r                  formKey: `${item.tableCollumName}_${record.id}`,\r                  value: e.target.value,\r                  key: item.tableCollumName,\r                })\r              })(\r                <Input placeholder=\"请输入\" />\r              )}\r            </FormItem>)\r          } else {\r            return (<span>{record[item.tableCollumName]}</span>)\r          }\r        }\r      })\r    }) : [];\r\r\r    // 分页数据\r    const pagination = {\r      current: pageNum,\r      total: total,\r      pageSize: pageSize,\r      showSizeChanger: true,\r      showQuickJumper: true,\r      onChange: this.handlePageChange,\r      onShowSizeChange: this.handleShowSizeChange,\r    };\r\r\r    const props = {\r      name: 'file',\r      beforeUpload(file, fileList) {\r      },\r      showUploadList: false,\r      customRequest(info) {\r        // 上传大小限制10M\r        // if (info.file && (info.file.size / 1024 / 1024) > 10) {\r        //   message.error('请上传小于10M的文件！');\r        //   return false;\r        // }\r        // that.setState({\r        //   fileLoading: true\r        // });\r        const formData = new FormData();\r        formData.append('excelFile', info.file);\r        // 调接口\r        that.props.actions.uploadFile(formData);\r      },\r    };\r\r    const rowSelection = {\r      onChange: (selectedRowKeys, selectedRows) => {\r        this.setState({\r          selectedRowKeys,\r          selectedRows\r        });\r      },\r      getCheckboxProps: record => ({\r        disabled: false, // Column configuration not to be checked\r        name: record.name,\r      }),\r    };\r\r    getFieldDecorator('keys', {\r      initialValue: [],\r    });\r    const inputs = getFieldValue('keys').map(item => {\r      return (\r        <Col {...generalLayout}>\r          <FormItem {...formOtherLayout} label={`${item.excelCollumName}`}>\r            {getFieldDecorator(`${item.tableCollumName}`, {\r              initialValue: '',\r              onChange: (e) => this.handleFieldsBlur({\r                id: item.tableCollumName,\r                value: e.target.value,\r              })\r            })(\r              <Input placeholder=\"请输入\" />\r            )}\r          </FormItem>\r        </Col>)\r    });\r\r    return (\r      <div className=\"page-index\">\r        <Spin spinning={fileLoading}>\r          <Content>\r            <Form\r              className=\"ant-advanced-search-form\"\r              onSubmit={this.handleSearch}\r            >\r              <Row gutter={24}>\r                <h3>文件上传</h3>\r                <Col span={10}\r                     style={{ height: 70 }}>\r                  <FormItem {...formOtherLayout}\r                            label=\"文件\">\r                    {getFieldDecorator('fileId', {\r                      rules: [{\r                        required: true,\r                        whitespace: true,\r                        message: \"请先选择文件\",\r                      }]\r                    })(\r                      <Select\r                        showSearch\r                        optionFilterProp=\"children\"\r                        allowClear\r                        style={{ width: 400 }}\r                        placeholder=\"请选择\"\r                        onSelect={this.changeSelectGroup}>\r                        {\r                          fileList && fileList.length > 0 && fileList.map(item => {\r                            return (<Select.Option title={item.excelName} key={`tableFile_${item.id}`}\r                                                   value={item.tableName}>{item.excelName}</Select.Option>)\r                          })\r                        }\r                      </Select>,\r                    )}\r                  </FormItem>\r                </Col>\r                <Col span={8}\r                     style={{ textAlign: 'left' }}>\r                  <Upload {...props}>\r                    <Button type=\"primary\">上传文件</Button>\r                  </Upload>\r                  <Button\r                    style={{ marginLeft: '10px' }}\r                    type=\"default\"\r                    onClick={this.exportFile}>导出</Button>\r                </Col>\r                <Col style={{ clear: 'both' }} />\r              </Row>\r              <Row gutter={24}>\r                {\r                  inputs\r                }\r              </Row>\r              <Row gutter={24}>\r                <Col {...generalLayout} style={{ marginLeft: '700px', marginBottom: '15px' }}>\r                  <Button type=\"primary\" htmlType=\"submit\">查询</Button>&nbsp;&nbsp;&nbsp;&nbsp;\r                  <Button type=\"default\" onClick={this.resetForm}>重置</Button>\r                </Col>\r              </Row>\r            </Form>\r            <h3 style={{ margin: '0 0 5px', paddingTop: '25px', borderTop: '1px solid #ddd' }}>文件导入记录</h3>\r            <Row gutter={24} style={{ marginBottom: '10px' }}>\r              <Col style={{ textAlign: 'left' }}\r                   span={12}>\r                <Button type=\"primary\" onClick={this.batchUpdate} disabled={!selectedRowKeys.length > 0}>批量更新</Button>\r              </Col>\r              <Col style={{ textAlign: 'right' }}\r                   span={12}>\r                <div className=\"search-count\">\r                  共 {pagination.total} 条\r                </div>\r              </Col>\r            </Row>\r            <Spin spinning={loading}>\r              <Table scroll={{ x: '100%' }}\r                     rowKey=\"id\"\r                     className=\"table-list\"\r                     rowSelection={rowSelection}\r                     dataSource={dataSource}\r                     columns={columnsObj}\r                     pagination={pagination} />\r            </Spin>\r\r            <Modal\r              title=\"操作\"\r              width={600}\r              visible={isShowModal}\r              confirmLoading={confirmLoading}\r              onCancel={() => {\r                this.handleShowModal({ modalVar: 'isShowModal', flag: false });\r              }}\r              okText=\"确认\"\r              cancelText=\"取消\"\r            >\r            </Modal>\r          </Content>\r        </Spin>\r\r      </div>\r    );\r  }\r}\r\rconst FinalIndex = Form.create()(\r  Index,\r);\r\rconst mapStateToProps = (state) => {\r  const {\r    resultList,\r    operateSuccessFlag,\r    operateFailFlag,\r    operateInfo,\r    tableList,\r    fileList,\r    refreshFileFlag,\r    columnList,\r    pageInfo,\r    loading,\r  } = state.resumeReducer;\r  return {\r    resultList,\r    operateSuccessFlag,\r    operateFailFlag,\r    operateInfo,\r    tableList,\r    fileList,\r    refreshFileFlag,\r    columnList,\r    pageInfo,\r    loading,\r  }\r};\r\rconst mapDispatchToProps = dispatch => {\r  return {\r    actions: bindActionCreators(actions, dispatch)\r  }\r};\r\rexport default connect(\r  mapStateToProps,\r  mapDispatchToProps\r)(FinalIndex);\r"],"sourceRoot":""}